public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int left = nums1.length;
        int right = nums2.length;
        if(left > right) return findMedianSortedArrays(nums2, nums1);
        
        
        int imin=0, imax=left;
        int leftMax, rightMin;
        int i=(imin +imax)/2, j=(left +right +1)/2 -i;
        
        while(imin <= imax){
            i = (imin + imax)/2;
            j = (left +right +1)/2 -i;
            if(i>0 && nums1[i-1] > nums2[j]){
                imax = i-1;
            }else if(i<left && nums2[j-1] > nums1[i]){
                imin = i+1;
            }else{
                break;
            }
        }
        if(i==0){
            leftMax= nums2[j-1];
        }else if(j==0){
            leftMax= nums1[i-1];
        }else{
            leftMax=Math.max(nums1[i-1],nums2[j-1]);
        }
        
        if((left+right)%2 ==1){
            return leftMax;
        }
        
        if(i==left){
            rightMin = nums2[j];
        }else if(j==right){
            rightMin = nums1[i];
        }else{
            rightMin = Math.min(nums1[i], nums2[j]);
        }
        
        return (leftMax + rightMin)/2.0;
        
     }
}
